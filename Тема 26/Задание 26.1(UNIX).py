'''
Во многих компьютерных системах текущее время хранится в формате «UNIX-время» — количестве секунд от начала суток 1 января 1970 года.
В одной компьютерной системе проводили исследование загруженности.
Для этого в течение месяца с момента UNIX-времени 1633046400 фиксировали и заносили в базу данных моменты старта и
финиша всех процессов, действовавших в этой системе.
Вам необходимо определить, какое наибольшее количество процессов выполнялось в системе одновременно на неделе,
начавшейся в момент UNIX-времени 1633305600, и в течение какого суммарного времени (в секундах) выполнялось такое
наибольшее количество процессов.

Входные данные.

Первая строка входного файла содержит целое число N — общее количество процессов за весь период наблюдения.
Каждая из следующих N строк содержит 2 целых числа: время старта и время завершения одного процесса в виде UNIX-времени.
Все данные в строках входного файла отделены одним пробелом.
Если в качестве времени старта указан ноль, это означает, что процесс был активен в момент начала исследования.
Если в качестве времени завершения указан ноль, это означает, что процесс не завершился к моменту окончания исследования.
При совпадающем времени считается, что все старты и завершения процессов происходят одновременно, в начале соответствующей секунды.
В частности, если время старта одного процесса совпадает с временем завершения другого и других стартов и завершений в этот момент нет,
то количество активных процессов в этот момент не изменяется.

В ответе запишите два целых числа: сначала максимальное количество процессов, которые выполнялись одновременно на неделе,
начиная с момента UNIX-времени 1633305600, затем суммарное количество секунд, в течение которых на этой неделе выполнялось
такое максимальное количество процессов.

Ответ: 5000 46
'''

f = open('26.1.txt')
process = [0 for i in range(604800)]
f.readline()
startTime = 1633305600
endTime = startTime + 604800
count = 0
sum = 0
max = 0
for line in f:
    start, end = map(int, line.split())
    if start < startTime and (end > startTime or end == 0):
        count += 1
    if startTime <= start <= endTime:
        process[start - startTime] += 1
    if startTime <= end <= endTime:
        process[end - startTime] -= 1

for i in process:
    count += i
    if count > max:
        max = count
        sum = 0
    if count == max:
        sum += 1
print(max, sum)
