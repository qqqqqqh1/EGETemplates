'''
Обозначим остаток от деления натурального числа a на натуральное число b как a mod b.
Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:

F(0) = 0;
F(n) = F(n − 1) + 1, если n > 0 и при этом n mod 3 = 2;
F(n) = F((n − n mod 3) / 3), если n > 0 и при этом n mod 3 < 2.

Укажите наименьшее возможное n, для которого F(n) = 6.

Ответ: 728
'''

"""
Проблемы в задании:
    1. Большая глубина рекурсии (RecursionError: maximum recursion depth exceeded).
       Решение:
               import sys
               sys.setrecursionlimit(2000)

       Если решение не помогло, то проанализировать дебагом функцию,
       понять, что она делает и попытаться решить не используя рекурсию.
"""

def f(n):
    if n == 0:
        return 0
    elif n % 3 == 2 and n > 0:
        return f(n - 1) + 1
    elif n % 3 < 2 and n > 0:
        return f((n - n % 3) // 3)

for i in range(1000):
    if f(i) == 6:
        print(i)
        break
